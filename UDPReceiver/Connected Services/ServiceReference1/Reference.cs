//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UDPReceiver.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorInfo", Namespace="http://schemas.datacontract.org/2004/07/EksamenSoapService")]
    [System.SerializableAttribute()]
    public partial class DoorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InGoingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutGoingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoorNumber {
            get {
                return this.DoorNumberField;
            }
            set {
                if ((this.DoorNumberField.Equals(value) != true)) {
                    this.DoorNumberField = value;
                    this.RaisePropertyChanged("DoorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InGoing {
            get {
                return this.InGoingField;
            }
            set {
                if ((this.InGoingField.Equals(value) != true)) {
                    this.InGoingField = value;
                    this.RaisePropertyChanged("InGoing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutGoing {
            get {
                return this.OutGoingField;
            }
            set {
                if ((this.OutGoingField.Equals(value) != true)) {
                    this.OutGoingField = value;
                    this.RaisePropertyChanged("OutGoing");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoorInfoByDoorNumber", ReplyAction="http://tempuri.org/IService1/GetDoorInfoByDoorNumberResponse")]
        UDPReceiver.ServiceReference1.DoorInfo[] GetDoorInfoByDoorNumber(string doorNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoorInfoByDoorNumber", ReplyAction="http://tempuri.org/IService1/GetDoorInfoByDoorNumberResponse")]
        System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetDoorInfoByDoorNumberAsync(string doorNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertDataFB", ReplyAction="http://tempuri.org/IService1/InsertDataFBResponse")]
        int InsertDataFB(int DoorNumber, int OutGoing, int InGoing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertDataFB", ReplyAction="http://tempuri.org/IService1/InsertDataFBResponse")]
        System.Threading.Tasks.Task<int> InsertDataFBAsync(int DoorNumber, int OutGoing, int InGoing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInfoDB", ReplyAction="http://tempuri.org/IService1/GetAllInfoDBResponse")]
        UDPReceiver.ServiceReference1.DoorInfo[] GetAllInfoDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInfoDB", ReplyAction="http://tempuri.org/IService1/GetAllInfoDBResponse")]
        System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetAllInfoDBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearInfo", ReplyAction="http://tempuri.org/IService1/ClearInfoResponse")]
        void ClearInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearInfo", ReplyAction="http://tempuri.org/IService1/ClearInfoResponse")]
        System.Threading.Tasks.Task ClearInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddInfo", ReplyAction="http://tempuri.org/IService1/AddInfoResponse")]
        void AddInfo(UDPReceiver.ServiceReference1.DoorInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddInfo", ReplyAction="http://tempuri.org/IService1/AddInfoResponse")]
        System.Threading.Tasks.Task AddInfoAsync(UDPReceiver.ServiceReference1.DoorInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInfo", ReplyAction="http://tempuri.org/IService1/GetAllInfoResponse")]
        UDPReceiver.ServiceReference1.DoorInfo[] GetAllInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInfo", ReplyAction="http://tempuri.org/IService1/GetAllInfoResponse")]
        System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetAllInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : UDPReceiver.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<UDPReceiver.ServiceReference1.IService1>, UDPReceiver.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UDPReceiver.ServiceReference1.DoorInfo[] GetDoorInfoByDoorNumber(string doorNumber) {
            return base.Channel.GetDoorInfoByDoorNumber(doorNumber);
        }
        
        public System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetDoorInfoByDoorNumberAsync(string doorNumber) {
            return base.Channel.GetDoorInfoByDoorNumberAsync(doorNumber);
        }
        
        public int InsertDataFB(int DoorNumber, int OutGoing, int InGoing) {
            return base.Channel.InsertDataFB(DoorNumber, OutGoing, InGoing);
        }
        
        public System.Threading.Tasks.Task<int> InsertDataFBAsync(int DoorNumber, int OutGoing, int InGoing) {
            return base.Channel.InsertDataFBAsync(DoorNumber, OutGoing, InGoing);
        }
        
        public UDPReceiver.ServiceReference1.DoorInfo[] GetAllInfoDB() {
            return base.Channel.GetAllInfoDB();
        }
        
        public System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetAllInfoDBAsync() {
            return base.Channel.GetAllInfoDBAsync();
        }
        
        public void ClearInfo() {
            base.Channel.ClearInfo();
        }
        
        public System.Threading.Tasks.Task ClearInfoAsync() {
            return base.Channel.ClearInfoAsync();
        }
        
        public void AddInfo(UDPReceiver.ServiceReference1.DoorInfo info) {
            base.Channel.AddInfo(info);
        }
        
        public System.Threading.Tasks.Task AddInfoAsync(UDPReceiver.ServiceReference1.DoorInfo info) {
            return base.Channel.AddInfoAsync(info);
        }
        
        public UDPReceiver.ServiceReference1.DoorInfo[] GetAllInfo() {
            return base.Channel.GetAllInfo();
        }
        
        public System.Threading.Tasks.Task<UDPReceiver.ServiceReference1.DoorInfo[]> GetAllInfoAsync() {
            return base.Channel.GetAllInfoAsync();
        }
    }
}
